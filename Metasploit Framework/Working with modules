Once you have entered the context of a module using the 'use' command followed by the module name, you will need to set parameters. The most common 
parameters you will use are listed below. 
Remember, based on the module you use, additional or different parameters may need to be set. It is good practice to use the 'show options' command to 
list the required parameters.

All parameters are set using the same command syntax:
> set [PARAMETER_NAME] [VALUE]

-----

Before we proceed, remember always to check the msfconsole prompt to ensure you are in the right context. When dealing with Metasploit, you may see 
five different prompts:

1. The Regular Command Prompt: 
   You can not use Metasploit commands here.
	-> root@linux:~#

2. The msfconsole Prompt: 
   msf6 (or msf5 depending on your installed version) is the msfconsole prompt. No context is set here, so context-specific commands to set parameters 
   and run modules can not be used here.
	-> msf6 >

3. A Context Prompt: 
   After using the set command to chose required module, the msfconsole will show the context. You can use context-specific commands (e.g. set 
   RHOSTS 10.10.x.x) here.
	-> msf6 exploit(windows/smb/ms17_010_eternalblue) >

4. The Meterpreter Prompt: 
   Meterpreter is an important payload. This means a Meterpreter agent was loaded to the target system and connected back to you. You can use 
   Meterpreter specific commands here.
	-> meterpreter >

5. A Shell on The Target System: 
   Once the exploit is completed, you may have access to a command shell on the target system. This is a regular command line, and all commands typed 
   here run on the target system.
	-> C:\Windows\system32>

-----

The 'show options' command will list all available parameters for the selected module.

Some of the parameters require a value for the exploit to work. Some required parameter values will be pre-populated, make sure you check if these 
should remain the same for your target. 
For example, a web exploit could have an RPORT (remote port: the port on the target system Metasploit will try to connect to and run the exploit) 
value preset to 80, but your target web application could be using port 8080.

> set [parameter] [value] - use set command to set value for parameters required for module.
> set rhosts 10.10.165.39

Once you have set a parameter, you can use the show options command to check the value was set correctly.

-----

Parameters you will often use :

1. RHOSTS: “Remote host” 
The IP address of the target system. A single IP address or a network range can be set. 
This will support the CIDR (Classless Inter-Domain Routing) notation (/24, /16, etc.) or a network range (10.10.10.x – 10.10.10.y). 
You can also use a file where targets are listed, one target per line using 'file:/path/of/the/target_file.txt'
	> set RHOSTS file:/path/of/the/target_file.txt

2. RPORT: “Remote port”
The port on the target system the vulnerable application is running on.

3. PAYLOAD: 
The payload you will use with the exploit.

4. LHOST: “Localhost”
The attacking machine (your AttackBox or Kali Linux) IP address.

5. LPORT: “Local port” 
The port you will use for the reverse shell to connect back to. 
This is a port on your attacking machine, and you can set it to any port not used by any other application.

6. SESSION: 
Each connection established to the target system using Metasploit will have a SESSION ID. 
You will use this with post-exploitation modules that will connect to the target system using an existing connection.


	You can override any set parameter using the set command again with a different value. 
	You can also clear any parameter value using the 'unset' command or clear all set parameters with the 'unset all' command.

> unset [parameter] - clear specified parameter value
> unset all - clear all set parameters

-----

GLOBAL Variables

> setg [parameter] [value] -  set values that will be used for all modules.

The setg command allows you to set the value so it can be used by default across different modules.

> unsetg [parameter] - unset value for any global variable

NOTE: The setg command sets a global value that will be used until you exit Metasploit or clear it using the unsetg command.

-----

USING MODULES

> exploit - Once all module parameters are set, module can be launched using the exploit command. 
> run - Metasploit also supports the run command, which is an alias created for the exploit command as the word exploit did not make sense 
	when using modules that were not exploits (port scanners, vulnerability scanners, etc.).

> exploit -z - runs the exploit and background the session as soon as it opens.

Some modules support the 'check' option. This will check if the target system is vulnerable without exploiting it.
	> check

-----

SESSIONS

Once a vulnerability has been successfully exploited, a session will be created. This is the communication channel established between the 
target system and Metasploit.

> background - background the current session prompt and go back to the msfconsole prompt.

Alternatively, CTRL+Z can be used to background sessions.

> sessions - can be used from the msfconsole prompt or any context to see the existing sessions.

> sessions -i [session number] - interacts with the specified session
	> sessions -i 2

-----










